name: Fraud Detection MLOps (Testing Branch)

on:
  workflow_dispatch:  # manual trigger for demo

jobs:
  simulate-year:
    runs-on: self-hosted   # your local runner
    env:
      API_KEY: ${{ secrets.API_KEY }}
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      PORT: ${{ secrets.PORT }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Write .env for Docker Compose
        run: |
          echo "API_KEY=$API_KEY" > .env
          echo "MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI" >> .env
          echo "PORT=$PORT" >> .env
          cat .env

      - name: Build containers
        run: docker compose build

      - name: Prepare folders
        run: |
          mkdir -p mlruns artifacts data
          chmod -R 777 mlruns artifacts data

      - name: Generate monthly drifted datasets
        run: docker compose run --rm trainer python data/generate_monthly_data.py

      - name: Simulate one year of retraining with drift
        run: |
          for month in {1..12}; do
            echo "======================"
            echo " Month $month"
            echo "======================"

            # retrain on drifted dataset
            docker compose run --rm trainer python training/train_model.py \
              --data-file data/fraud_month_${month}.csv

            # promote new model if better
            docker compose run --rm promote

            # restart API
            docker compose up -d api
            sleep 8

            # check health
            curl -s -o /dev/null -w "%{http_code}" \
              -H "x-api-key: $API_KEY" \
              http://localhost:${PORT}/health | grep 200

            # test prediction
            RESPONSE=$(curl -s -X POST "http://localhost:${PORT}/predict" \
              -H "Content-Type: application/json" \
              -H "x-api-key: $API_KEY" \
              -d '{"amount": 500, "step": 100, "TRANSFER": 1, "PAYMENT": 0, "CASH_OUT": 0, "DEBIT": 0}')
            echo "Prediction: $RESPONSE"

            echo " Month $month retrain + API validation complete"
          done
